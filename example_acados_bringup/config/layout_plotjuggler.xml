<?xml version='1.0' encoding='UTF-8'?>
<root>
 <tabbed_widget name="Main Window" parent="main_window">
  <Tab containers="1" tab_name="joint states">
   <Container>
    <DockSplitter orientation="-" sizes="0.332995;0.33401;0.332995" count="3">
     <DockSplitter orientation="|" sizes="0.5;0.5" count="2">
      <DockArea name="Joint position q_1">
       <plot mode="TimeSeries" style="Lines" flip_y="false" flip_x="false">
        <range left="16.995050" top="0.078538" right="24.994999" bottom="-3.220038"/>
        <limitY/>
        <curve name="/joint_states/joint1/position" color="#000000"/>
        <curve name="q1_min" color="#d62728"/>
        <curve name="q1_max" color="#1f77b4"/>
       </plot>
      </DockArea>
      <DockArea name="Joint position q_2">
       <plot mode="TimeSeries" style="Lines" flip_y="false" flip_x="false">
        <range left="16.995050" top="1.649288" right="24.994999" bottom="-1.649288"/>
        <limitY/>
        <curve name="/joint_states/joint2/position" color="#000000"/>
        <curve name="q2_min" color="#ff290e"/>
        <curve name="q2_max" color="#1a6ac9"/>
       </plot>
      </DockArea>
     </DockSplitter>
     <DockSplitter orientation="|" sizes="0.502525;0.497475" count="2">
      <DockArea name="Joint velocity q_dot_1">
       <plot mode="TimeSeries" style="Lines" flip_y="false" flip_x="false">
        <range left="16.995050" top="2.100000" right="24.994999" bottom="-2.100000"/>
        <limitY/>
        <curve name="/joint_states/joint1/velocity" color="#000000"/>
        <curve name="q_dot_max" color="#1f77b4"/>
        <curve name="q_dot_min" color="#d62728"/>
       </plot>
      </DockArea>
      <DockArea name="Joint velocity q_dot_2">
       <plot mode="TimeSeries" style="Lines" flip_y="false" flip_x="false">
        <range left="16.995050" top="2.100000" right="24.994999" bottom="-2.100000"/>
        <limitY/>
        <curve name="/joint_states/joint2/velocity" color="#000000"/>
        <curve name="q_dot_max" color="#1f77b4"/>
        <curve name="q_dot_min" color="#d62728"/>
       </plot>
      </DockArea>
     </DockSplitter>
     <DockSplitter orientation="|" sizes="0.502525;0.497475" count="2">
      <DockArea name="Joint control torque tau_1">
       <plot mode="TimeSeries" style="Lines" flip_y="false" flip_x="false">
        <range left="16.995050" top="26.250000" right="24.994999" bottom="-26.250000"/>
        <limitY/>
        <curve name="/joint_states/joint1/effort" color="#000000"/>
        <curve name="tau_1_max" color="#1a5ec9"/>
        <curve name="tau_1_min" color="#ff390e"/>
       </plot>
      </DockArea>
      <DockArea name="Joint control torque tau_2">
       <plot mode="TimeSeries" style="Lines" flip_y="false" flip_x="false">
        <range left="16.995050" top="10.500000" right="24.994999" bottom="-10.500000"/>
        <limitY/>
        <curve name="/joint_states/joint2/effort" color="#000000"/>
        <curve name="tau_2_max" color="#205feb"/>
        <curve name="tau_2_min" color="#e7433a"/>
       </plot>
      </DockArea>
     </DockSplitter>
    </DockSplitter>
   </Container>
  </Tab>
  <currentTabIndex index="0"/>
 </tabbed_widget>
 <use_relative_time_offset enabled="1"/>
 <!-- - - - - - - - - - - - - - - -->
 <!-- - - - - - - - - - - - - - - -->
 <Plugins>
  <plugin ID="DataLoad CSV">
   <parameters delimiter="0" time_axis=""/>
  </plugin>
  <plugin ID="DataLoad MCAP"/>
  <plugin ID="DataLoad ROS2 bags">
   <use_header_stamp value="false"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
   <selected_topics value="/fd_cartesian_state;/fd_compliance_frame_reference;/fd_desired_compliance_frame_GT;/parameter_events;/ppf_node_diagnostic;/simulation_time"/>
  </plugin>
  <plugin ID="DataLoad ULog"/>
  <plugin ID="ROS2 Topic Subscriber">
   <use_header_stamp value="true"/>
   <discard_large_arrays value="true"/>
   <max_array_size value="100"/>
   <boolean_strings_to_number value="true"/>
   <remove_suffix_from_strings value="true"/>
   <selected_topics value="/cartesian_reference;/joint_states"/>
  </plugin>
  <plugin ID="UDP Server"/>
  <plugin ID="WebSocket Server"/>
  <plugin ID="ZMQ Subscriber"/>
  <plugin ID="Fast Fourier Transform"/>
  <plugin ID="Quaternion to RPY"/>
  <plugin ID="Reactive Script Editor">
   <library code="--[[ Helper function to create a series from arrays&#xa;&#xa; new_series: a series previously created with ScatterXY.new(name)&#xa; prefix:     prefix of the timeseries, before the index of the array&#xa; suffix_X:   suffix to complete the name of the series containing the X value. If [nil], use the index of the array.&#xa; suffix_Y:   suffix to complete the name of the series containing the Y value&#xa; timestamp:   usually the tracker_time variable&#xa;              &#xa; Example:&#xa; &#xa; Assuming we have multiple series in the form:&#xa; &#xa;   /trajectory/node.{X}/position/x&#xa;   /trajectory/node.{X}/position/y&#xa;   &#xa; where {N} is the index of the array (integer). We can create a reactive series from the array with:&#xa; &#xa;   new_series = ScatterXY.new(&quot;my_trajectory&quot;) &#xa;   CreateSeriesFromArray( new_series, &quot;/trajectory/node&quot;, &quot;position/x&quot;, &quot;position/y&quot;, tracker_time );&#xa;--]]&#xa;&#xa;function CreateSeriesFromArray( new_series, prefix, suffix_X, suffix_Y, timestamp )&#xa;  &#xa;  --- clear previous values&#xa;  new_series:clear()&#xa;  &#xa;  --- Append points to new_series&#xa;  index = 0&#xa;  while(true) do&#xa;&#xa;    x = index;&#xa;    -- if not nil, get the X coordinate from a series&#xa;    if suffix_X ~= nil then &#xa;      series_x = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_X) )&#xa;      if series_x == nil then break end&#xa;      x = series_x:atTime(timestamp)&#x9; &#xa;    end&#xa;    &#xa;    series_y = TimeseriesView.find( string.format( &quot;%s.%d/%s&quot;, prefix, index, suffix_Y) )&#xa;    if series_y == nil then break end &#xa;    y = series_y:atTime(timestamp)&#xa;    &#xa;    new_series:push_back(x,y)&#xa;    index = index+1&#xa;  end&#xa;end&#xa;&#xa;--[[ Similar to the built-in function GetSeriesNames(), but select only the names with a give prefix. --]]&#xa;&#xa;function GetSeriesNamesByPrefix(prefix)&#xa;  -- GetSeriesNames(9 is a built-in function&#xa;  all_names = GetSeriesNames()&#xa;  filtered_names = {}&#xa;  for i, name in ipairs(all_names)  do&#xa;    -- check the prefix&#xa;    if name:find(prefix, 1, #prefix) then&#xa;      table.insert(filtered_names, name);&#xa;    end&#xa;  end&#xa;  return filtered_names&#xa;end&#xa;&#xa;--[[ Modify an existing series, applying offsets to all their X and Y values&#xa;&#xa; series: an existing timeseries, obtained with TimeseriesView.find(name)&#xa; delta_x: offset to apply to each x value&#xa; delta_y: offset to apply to each y value &#xa;  &#xa;--]]&#xa;&#xa;function ApplyOffsetInPlace(series, delta_x, delta_y)&#xa;  -- use C++ indices, not Lua indices&#xa;  for index=0, series:size()-1 do&#xa;    x,y = series:at(index)&#xa;    series:set(index, x + delta_x, y + delta_y)&#xa;  end&#xa;end&#xa;"/>
   <scripts/>
  </plugin>
  <plugin ID="CSV Exporter"/>
  <plugin ID="ROS2 Topic Re-Publisher"/>
 </Plugins>
 <!-- - - - - - - - - - - - - - - -->
 <previouslyLoaded_Datafiles/>
 <previouslyLoaded_Streamer name="ROS2 Topic Subscriber"/>
 <!-- - - - - - - - - - - - - - - -->
 <customMathEquations>
  <snippet name="q2_max">
   <global></global>
   <function>return 3.1415 / 2</function>
   <linked_source>/joint_states/joint1/position</linked_source>
  </snippet>
  <snippet name="q2_min">
   <global></global>
   <function>return - 3.1415 / 2</function>
   <linked_source>/joint_states/joint1/position</linked_source>
  </snippet>
  <snippet name="q1_max">
   <global></global>
   <function>return 0</function>
   <linked_source>/joint_states/joint1/position</linked_source>
  </snippet>
  <snippet name="q1_min">
   <global></global>
   <function>return - 3.1415</function>
   <linked_source>/joint_states/joint1/position</linked_source>
  </snippet>
  <snippet name="q_dot_min">
   <global></global>
   <function>return - 2</function>
   <linked_source>/joint_states/joint1/velocity</linked_source>
  </snippet>
  <snippet name="q_dot_max">
   <global></global>
   <function>return 2</function>
   <linked_source>/joint_states/joint1/velocity</linked_source>
  </snippet>
  <snippet name="tau_1_max">
   <global></global>
   <function>return 25</function>
   <linked_source>/joint_states/joint1/effort</linked_source>
  </snippet>
  <snippet name="tau_1_min">
   <global></global>
   <function>return - 25</function>
   <linked_source>/joint_states/joint1/effort</linked_source>
  </snippet>
  <snippet name="tau_2_min">
   <global></global>
   <function>return -10</function>
   <linked_source>/joint_states/joint1/effort</linked_source>
  </snippet>
  <snippet name="tau_2_max">
   <global></global>
   <function>return 10</function>
   <linked_source>/joint_states/joint1/effort</linked_source>
  </snippet>
 </customMathEquations>
 <snippets/>
 <!-- - - - - - - - - - - - - - - -->
</root>
